tstat
obs = c(32.5, 33.1, 31.8, 33.6, 34)
sdplus = sqrt(5/(5-1)) * sd(obs)
seavg = sdplus/sqrt(5)
seavg
tstat = (mean(obs) - 34)/seavg
tstat
obs = c(32.5, 33.1, 31.8, 33.6, 34)
sdplus = sqrt(5/(5-1)) * sd(obs)
seavg = sd(obv)/sqrt(5)
obs = c(32.5, 33.1, 31.8, 33.6, 34)
sdplus = sqrt(5/(5-1)) * sd(obs)
seavg = sd(obs)/sqrt(5)
tstat = (mean(obs) - 34)/seavg
tstat
obs = c(32.5, 33.1, 31.8, 33.6, 34)
sdplus = sqrt(5/(5-1)) * sd(obs)
seavg = sdplus/sqrt(5)
tstat = (mean(obs) - 34)/seavg
pt(tstat, df=4)
t.test(obs,
alternative = 'less',
mu = 34)
se1 = 10/sqrt(350)
se2 = 9/sqrt(100)
sepooled = sqrt(se1^2+se2^2)
diff = 14-15
z_stat = diff/sepooled
pnorm(z_stat)
se1 = 10/sqrt(350)
se2 = 9/sqrt(100)
sepooled = sqrt(se1^2+se2^2)
diff = 14-15
z_stat = diff/sepooled
pnorm(z_stat)*2
num_dem = 0.4
num_ind = 0.25
num_rep = 0.35
num_iso = num_dem * 0.66 + num_ind * 0.45 + num_rep * 0.32
num_uniso = 1-num_iso
exp_dem_iso = num_dem * num_iso
exp_dem_unsio = num_dem*num_uniso
exp_ind_iso = num_ind * num_iso
exp_ind_unsio = num_ind*num_uniso
exp_rep_iso = num_rep * num_iso
exp_rep_unsio = num_rep*num_uniso
chisq_stat = (num_dem*0.66-exp_dem_iso)^2/exp_dem_iso + (num_dem*0.34-exp_dem_uniso)^2/exp_dem_uniso + (num_ind*0.45 - exp_ind_iso)^2/exp_ind_iso + (num_ind*0.55 - exp_ind_uniso)^2/exp_ind_uniso + (num_rep * 0.32 - exp_rep_iso)^2/exp_rep_iso + (num_rep * 0.68 - exp_rep_uniso)^2/exp_rep_uniso
num_dem = 0.4
num_ind = 0.25
num_rep = 0.35
num_iso = num_dem * 0.66 + num_ind * 0.45 + num_rep * 0.32
num_uniso = 1-num_iso
exp_dem_iso = num_dem * num_iso
exp_dem_uniso = num_dem*num_uniso
exp_ind_iso = num_ind * num_iso
exp_ind_uniso = num_ind*num_uniso
exp_rep_iso = num_rep * num_iso
exp_rep_uniso = num_rep*num_uniso
chisq_stat = (num_dem*0.66-exp_dem_iso)^2/exp_dem_iso + (num_dem*0.34-exp_dem_uniso)^2/exp_dem_uniso + (num_ind*0.45 - exp_ind_iso)^2/exp_ind_iso + (num_ind*0.55 - exp_ind_uniso)^2/exp_ind_uniso + (num_rep * 0.32 - exp_rep_iso)^2/exp_rep_iso + (num_rep * 0.68 - exp_rep_uniso)^2/exp_rep_uniso
pchisq(chisq_stat, df = 2)
chisq.test(x=c(c(0.1, 0.2), c(0.3, 0.5), c(0.3, 0.5)))
chisq.test(x=data.frame(one = c(0.1, 0.2), two = c(0.3, 0.5))))
chisq.test(x=data.frame(one = c(0.1, 0.2), two = c(0.3, 0.5)))
chisq.test(x=data.frame(iso = c(0.4*0.66, 0.25*0.45, 0.34*0.32), two = c(0.4*0.34, 0.25*0.55, 0.34*0.68)))
chisq.test(x=data.frame(iso = c(3000*0.4*0.66, 3000*0.25*0.45, 3000*0.34*0.32), two = c(3000*0.4*0.34, 3000*0.25*0.55, 3000*0.34*0.68)))
num_dem = 0.4
num_ind = 0.25
num_rep = 0.35
num_iso = num_dem * 0.66 + num_ind * 0.45 + num_rep * 0.32
num_uniso = 1-num_iso
exp_dem_iso = num_dem * num_iso
exp_dem_uniso = num_dem*num_uniso
exp_ind_iso = num_ind * num_iso
exp_ind_uniso = num_ind*num_uniso
exp_rep_iso = num_rep * num_iso
exp_rep_uniso = num_rep*num_uniso
chisq_stat = (num_dem*0.66-exp_dem_iso)^2/exp_dem_iso + (num_dem*0.34-exp_dem_uniso)^2/exp_dem_uniso + (num_ind*0.45 - exp_ind_iso)^2/exp_ind_iso + (num_ind*0.55 - exp_ind_uniso)^2/exp_ind_uniso + (num_rep * 0.32 - exp_rep_iso)^2/exp_rep_iso + (num_rep * 0.68 - exp_rep_uniso)^2/exp_rep_uniso
pchisq(chisq_stat*3000, df = 2)
num_dem = 0.4
num_ind = 0.25
num_rep = 0.35
num_iso = num_dem * 0.66 + num_ind * 0.45 + num_rep * 0.32
num_uniso = 1-num_iso
exp_dem_iso = num_dem * num_iso
exp_dem_uniso = num_dem*num_uniso
exp_ind_iso = num_ind * num_iso
exp_ind_uniso = num_ind*num_uniso
exp_rep_iso = num_rep * num_iso
exp_rep_uniso = num_rep*num_uniso
chisq_stat = (num_dem*0.66-exp_dem_iso)^2/exp_dem_iso + (num_dem*0.34-exp_dem_uniso)^2/exp_dem_uniso + (num_ind*0.45 - exp_ind_iso)^2/exp_ind_iso + (num_ind*0.55 - exp_ind_uniso)^2/exp_ind_uniso + (num_rep * 0.32 - exp_rep_iso)^2/exp_rep_iso + (num_rep * 0.68 - exp_rep_uniso)^2/exp_rep_uniso
chisq_stat*3000
pchisq(chisq_stat*3000, df = 2)
chisq.test(x=data.frame(iso = c(3000*0.4*0.66, 3000*0.25*0.45, 3000*0.35*0.32), two = c(3000*0.4*0.34, 3000*0.25*0.55, 3000*0.35*0.68)))
setwd("~/GitHub/Politics-COVID")
read.csv("matched.csv")
dataset <- read.csv("matched.csv")
data <- read.csv("matched.csv")
data$caseRate = (data$Cases.9.30.2020-data$Cases.6.30.2020)/data$Population_2019
cor(data$caseRate, data$Population.Density)
cor(data$caseRate, data$diff)
data$deathRate = (data$Deaths.9.30.2020-data$Deaths.6.30.2020)/data$Population_2019
cor(data$deathRate, data$diff)
data$caseRate = (data$Cases.9.30.2020-data$Cases.7.30.2020)/data$Population_2019
data$deathRate = (data$Deaths.9.30.2020-data$Deaths.7.30.2020)/data$Population_2019
data$caseRate = (data$Cases.9.30.2020-data$Cases.7.31.2020)/data$Population_2019
data$deathRate = (data$Deaths.9.30.2020-data$Deaths.7.31.2020)/data$Population_2019
cor(data$deathRate, data$diff)
data$deathRate = (data$Deaths.9.30.2020-data$Deaths.8.31.2020+ data$Deaths.7.31.2020-data$Deaths.6.30.2020)/data$Population_2019
cor(data$deathRate, data$diff)
data$deathRate = (data$Deaths.9.30.2020-data$Deaths.8.31.2020)/(data$Deaths.7.31.2020-data$Deaths.6.30.2020)
cor(data$deathRate, data$diff)
data <- read.csv("covid.csv")
data <- read.csv("sources/covid.csv")
data$deathIncrease = (data$Oct_2020_Deaths-data$June_2020_Deaths)/data$Total.Population
data <- read.csv("sources/covid.csv")
data$deathIncrease = (data$Oct_2020_Deaths-data$June_2020_Deaths)/data$Total.Population
data$party = data$
d
cor(data$deathIncrease, data$Biden_Margin)
cor(data$deathIncrease, data$Depression.2020)
data <- read.csv("sources/covid.csv")
data$deathIncrease = (data$Oct_2020_Deaths-data$June_2020_Deaths)/data$Total.Population
cor(data$deathIncrease, data$Biden_Margin)
cor(data$deathIncrease, data$)
cor(data$deathIncrease, data$Income)
cor(data$deathIncrease, as.numeric(data$Income))
linear.1 <- lm(deathIncrease ~ Biden_Margin + Income,
data=data)
linear.1
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin,
data=data)
stargazer(linear.1)
data$Income = as.numeric(data$Income)
linear.1 <- lm(deathIncrease ~ Biden_Margin + Income,
data=data)
stargazer(linear.1)
linear.1
stargazer(linear.1)
cor(data$Biden_Margin, data$Income)
linear.1 <- lm(deathIncrease ~ Biden_Margin + Income,
data=data)
linear.1
stargazer(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin + Income + Total.number..adults.age.65.and.older,
data=data)
linear.1
stargazer(linear.1)
data$Boomers = data$Total.number..adults.age.65.and.older
data$Boomers = data$Total.number..adults.age.65.and.older/data$Total.Population
linear.1 <- lm(deathIncrease ~ Biden_Margin + Income + Total.number..adults.age.65.and.older,
data=data)
linear.1
linear.1 <- lm(deathIncrease ~ Biden_Margin + Income + Boomers,
data=data)
linear.1
stargazer(linear.1)
install.packages("summ")
summ(linear.1)
install.packages("jtools")
library(jtools)
summ(linear.1)
data$deathIncrease = (data$Oct_2020_Deaths-data$June_2020_Deaths)/data$Total.Population*100000
cor(data$deathIncrease, data$Biden_Margin)
cor(data$deathIncrease, data$Income)
data$Boomers = data$Total.number..adults.age.65.and.older/data$Total.Population
linear.1 <- lm(deathIncrease ~ Biden_Margin + Income + Boomers,
data=data)
summ(linear.1)
data$Oct_2020_DeathRate = data$Oct_2020_Deaths/data$Total.Population*100000
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers,
data=data)
summ(linear.1)
install.packages("jtools")
library(jtools)
data <- read.csv("sources/covid.csv")
data$Income = as.numeric(data$Income)
data$deathIncrease = (data$Oct_2020_Deaths-data$June_2020_Deaths)/data$Total.Population*100000
data$Oct_2020_DeathRate = data$Oct_2020_Deaths/data$Total.Population*100000
cor(data$deathIncrease, data$Biden_Margin)
cor(data$deathIncrease, data$Income)
data$Boomers = data$Total.number..adults.age.65.and.older/data$Total.Population
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers,
data=data)
summ(linear.1)
library(jtools)
data <- read.csv("sources/covid.csv")
data$Income = as.numeric(data$Income)
data$deathIncrease = (data$Oct_2020_Deaths-data$June_2020_Deaths)/data$Total.Population*100000
data$Oct_2020_DeathRate = data$Oct_2020_Deaths/data$Total.Population*100000
cor(data$deathIncrease, data$Biden_Margin)
cor(data$deathIncrease, data$Income)
data$Boomers = data$Total.number..adults.age.65.and.older/data$Total.Population
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + ,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + Density,
data=data)
(linear.1)
summ(linear.1)
data$Density = as.numeric(data$Density)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + Density,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + Density,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + Density,
data=data)
summ(linear.1)
data <- read.csv("sources/covid.csv")
data$Income = as.numeric(data$Income)
data$Density = as.numeric(data$Density)
data$Testing = as.numeric(data$Testing)
cor(data$Oct_2020_Cases, data$Testing)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + Density + Testing,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + Density + Testing,
data=data)
data$deathIncrease = (data$Oct_2020_Deaths-data$June_2020_Deaths)/data$Total.Population*100000
data$Oct_2020_DeathRate = data$Oct_2020_Deaths/data$Total.Population*100000
cor(data$deathIncrease, data$Biden_Margin)
cor(data$deathIncrease, data$Income)
data$Boomers = data$Total.number..adults.age.65.and.older/data$Total.Population
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + Density + Testing,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_Deaths ~ Biden_Margin + Income + Boomers + Density + Testing,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_Deaths ~ Biden_Margin + Income + Boomers + Density + Testing,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin + Income + Boomers + Density + Testing,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_deathIncrease ~ Biden_Margin + Income + Boomers + Density + Testing,
data=data)
summ(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin + Income + Boomers + Density + Testing,
data=data)
summ(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin+ Density + Testing + Income + Boomers ,
data=data)
summ(linear.1)
data$caseIncrease = (data$Oct_2020_Cases-data$June_2020_Cases)/data$Total.Population*100000
linear.1 <- lm(caseIncrease ~ Biden_Margin+ Density + Testing + Income + Boomers ,
data=data)
summ(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin+ Density + Testing + Income + Boomers ,
data=data)
summ(linear.1)
linear.1 <- lm(caseIncrease ~ Biden_Margin+ Density + Testing + Income + Boomers ,
data=data)
summ(linear.1)
data$Testing
cor(data$Testing, data$caseIncrease)
cor(data$Testing, data$Oct_2020_Cases)
linear.1 <- lm(caseIncrease ~ Biden_Margin+ Density + Testing + Income + Boomers ,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_Cases ~ Biden_Margin+ Density + Testing + Income + Boomers ,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_Cases/Total.Population ~ Biden_Margin+ Density + Testing + Income + Boomers ,
data=data)
summ(linear.1)
data <- read.csv("sources/covid.csv")
data$Income = as.numeric(data$Income)
data$Density = as.numeric(data$Density)
data$Testing = as.numeric(data$Testing)
data$deathIncrease = (data$Oct_2020_Deaths-data$June_2020_Deaths)/data$Total.Population*100000
data$caseIncrease = (data$Oct_2020_Cases-data$June_2020_Cases)/data$Total.Population*100000
data$Oct_2020_DeathRate = data$Oct_2020_Deaths/data$Total.Population*100000
cor(data$deathIncrease, data$Biden_Margin)
cor(data$deathIncrease, data$Income)
data$Boomers = data$Total.number..adults.age.65.and.older/data$Total.Population
data$Oct_2020_CaseRate = data$Oct_2020_Cases/data$Total.Population*100000
cor(data$Black, data$Oct_2020_CaseRate)
linear.1 <- lm(Oct_2020_Cases/Total.Population ~ Biden_Margin+ Density + Testing + Income + Boomers + Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
cor(data$Biden_Margin, data$Black)
cor(data$Biden_Margin, data$White)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin+ Density + Testing + Income + Boomers + Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_CaseRate ~ Biden_Margin+ Density + Testing + Income + Boomers + Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_CaseRate ~ Biden_Margin+ Density + Testing + Income + Boomers,
data=data)
summ(linear.1)
Black + White + Asian + Hispanic
linear.1 <- lm(Oct_2020_CaseRate ~ Biden_Margin+ Density + Testing + Income + Boomers + Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_CaseRate ~ Biden_Margin+ Density + Testing + Income +  Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin+ Density + Testing + Income + Boomers + Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin+ Density + Testing + Income + Boomers +  White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin+ Density + Testing + Income + Boomers + Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin+ Density + Testing + Income + Boomers + Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_DeathRate ~ Biden_Margin+ Density + Income + Boomers + Black + White + Asian + Hispanic,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_CaseIncrease ~ Biden_Margin,
data=data)
summ(linear.1)
linear.1 <- lm(Oct_2020_CaseIncrease ~ Biden_Margin,
data=data)
summ(linear.1)
linear.1 <- lm(CaseIncrease ~ Biden_Margin,
data=data)
summ(linear.1)
linear.1 <- lm(caseIncrease ~ Biden_Margin,
data=data)
summ(linear.1)
linear.1 <- lm(deathIncrease ~ Biden_Margin,
data=data)
summ(linear.1)
countydata <- read.csv("sources/matched.csv")
countydata$SeptCases = countydata$Cases.9.30.2020-countydata$Cases.8.31.2020
countydata$SeptCases = (countydata$Cases.9.30.2020-countydata$Cases.8.31.2020)/countydata$Population_2019
linear.2 = lm(SeptCases ~ diff)
linear.2 = lm(SeptCases ~ diff,
data = countydata)
summ(linear.2)
countydata$SeptCases = (countydata$Cases.9.30.2020-countydata$Cases.8.31.2020)/countydata$Population_2019*100000
linear.2 = lm(SeptCases ~ diff,
data = countydata)
summ(linear.2)
countydata$SeptCases = (countydata$Cases.9.30.2020-countydata$Cases.8.31.2020 -(countydata$Cases.7.31.2020-countydata$Cases.6.30.2020))/countydata$Population_2019*100000
linear.2 = lm(SeptCases ~ diff,
data = countydata)
summ(linear.2)
linear.2 = lm(SeptCases ~ diff + Population.Density,
data = countydata)
summ(linear.2)
linear.2 = lm(Cases.9.30.2020 ~ diff + Population.Density,
data = countydata)
summ(linear.2)
county_data <- read.csv("agglomerated/county_dataset.csv")
cor(county_data$X10.10.2020_deaths/county_data$population, county_data$per_dem_2020)
cor((county_data$X10.10.2020_deaths-county_data$X7.1.2020_deaths)/county_data$population, county_data$per_dem_2020)
cor((county_data$X10.10.2020_deaths)/county_data$population, county_data$per_dem_2020)
cor((county_data$X10.10.2020_deaths-county_data$X3.1.2020_deaths)/county_data$population, county_data$per_dem_2020)
cor((county_data$X12.10.2020_deaths-county_data$X8.1.2020_deaths)/county_data$population, county_data$per_dem_2020)
cor((county_data$X12.10.2020_deaths-county_data$X7.1.2020_deaths)/county_data$population, county_data$per_dem_2020)
cor((county_data$X12.10.2020_deaths-county_data$X5.1.2020_deaths)/county_data$population, county_data$per_dem_2020)
cor((county_data$X10.10.2020_deaths-county_data$X5.1.2020_deaths)/county_data$population, county_data$per_dem_2020)
cor((county_data$X10.10.2020_deaths-county_data$X7.1.2020_deaths)/county_data$population, county_data$per_dem_2020)
county_data <- read.csv("agglomerated/county_dataset.csv")
state_data <- read.csv("agglomerated/state_dataset.csv")
cor((state_data$X10.30.2020_deaths-state_data$X6.11.2020_cases)/state_data$population, state_data$per_dem_2020)
state_data$per_dem_2020
cor(county_data$maskuse, county_data$X12.10.2020_cases/county_data$population)
cor(county_data$maskuse, county_data$per_dem_2020)
cor(county_data$maskuse, county_data$per_dem_2016)
county_data <- read.csv("agglomerated/county_dataset.csv")
county_data$dem_caserate = county_data$X12.31.2020_cases/county_data$population
county_data$
linear.1 <- lm(dem_caserate ~ per_dem_2020 + x60older/population + density + total_deaths/population + lattitude + distance_to_work + per_capita_income + median_household + black + hispanic + bachelors + poverty,
data=county_data)
county_data$
linear.1 <- lm(dem_caserate ~ per_dem_2020 + X60older/population + density + total_deaths/population + lattitude + distance_to_work + per_capita_income + median_household + black + hispanic + bachelors + poverty + tests,
data=county_data)
summ(linear.1)
library(jtools)
summ(linear.1)
county_data$
linear.1 <- lm(dem_caserate ~ per_dem_2020 + X60older/population + density + total_deaths/population + lattitude + distance_to_work + per_capita_income + median_household + black + hispanic + bachelors + poverty + tests,
data=county_data)
linear.1 <- lm(dem_caserate ~ per_dem_2020 + X60older/population + density + total_deaths + lattitude + distance_to_work + per_capita_income + median_household + black + hispanic + bachelors + poverty + tests,
data=county_data)
summ(linear.1)
linear.1 <- lm(dem_caserate ~ per_dem_2020 + X60older/population + density + total_deaths/population + lattitude + distance_to_work + per_capita_income + median_household + black + hispanic + bachelors + poverty + tests,
data=county_data)
summ(linear.1)
linear.1 <- lm(dem_caserate*100000 ~ per_dem_2020 + X60older/population + density + total_deaths/population + lattitude + distance_to_work + per_capita_income + median_household + black + hispanic + bachelors + poverty + tests,
data=county_data)
summ(linear.1)
require(ggiraph)
require(ggiraphExtra)
require(plyr)
ggPredict(linear.1,se=TRUE,interactive=TRUE)
library(ggiraph)
install.packages("ggiraph")
install.packages("ggiraphExtra")
install.packages("plyr")
install.packages("plyr")
library(ggiraph)
library(ggiraphExtra)
library(plyr)
ggPredict(linear.1,se=TRUE,interactive=TRUE)
linear.2 <- lm(dem_caserate*100000 ~ per_dem_2020 + distance_to_work + lattitude,
data=county_data)
summ(linear.2)
ggPredict(linear.2,se=TRUE,interactive=TRUE)
county_data$dem_caserate = county_data$X12.31.2020_cases/county_data$population*100000
linear.2 <- lm(dem_caserate ~ per_dem_2020 + distance_to_work + lattitude,
data=county_data)
ggPredict(linear.2,se=TRUE,interactive=TRUE)
linear.2 <- lm(dem_caserate ~ per_dem_2020 + distance_to_work,
data=county_data)
summ(linear.2)
ggPredict(linear.2,se=TRUE,interactive=TRUE)
county_data$deathrate = county_data$X12.31.2020_deaths/county_data$population*100000
ggplot(county_data,
aes(x=dem_caserate, y=dem_deathrate))
library(ggplot)
library(ggplot2)
ggplot(county_data,
aes(x=dem_caserate, y=dem_deathrate))
county_data$caserate = county_data$X12.31.2020_cases/county_data$population*100000
county_data$deathrate = county_data$X12.31.2020_deaths/county_data$population*100000
ggplot(county_data,
aes(x=caserate, y=deathrate))
ggplot(county_data,
aes(x=caserate, y=deathrate)) +
geom_point()
ggplot(county_data,
aes(x=caserate, y=deathrate),
color=per_dem_2020) +
geom_point() +
geom_smooth(method="lm", se=F, col="black") +
scale_color_gradient2(low = "red", mid="grey", high = "blue",  midpoint = 0)
ggplot(county_data,
aes(x=caserate,
y=deathrate,
color=per_dem_2020)) +
geom_point() +
geom_smooth(method="lm", se=F, col="black") +
scale_color_gradient2(low = "red", mid="grey", high = "blue",  midpoint = 0)
ggplot(county_data,
aes(x=caserate,
y=deathrate,
color=per_dem_2020)) +
geom_point() +
geom_smooth(method="lm", se=F, col="black") +
scale_color_gradient2(low = "red", mid="grey", high = "blue",  midpoint = 0.5)
linear.1 <- lm(dem_caserate*100000 ~ per_dem_2020 + mask_use+ X60older/population + density + total_deaths/population + lattitude + distance_to_work + per_capita_income + median_household + black + hispanic + bachelors + poverty + tests,
data=county_data)
summ(linear.1)
linear.1 <- lm(dem_caserate~ per_dem_2020 + maskuse + X60older/population + density + total_deaths/population + lattitude + distance_to_work + per_capita_income + median_household + black + hispanic + bachelors + poverty + tests,
data=county_data)
summ(linear.1)
ggplot(county_data,
aes(x=per_dem_2020,
y=deathrate,
color=per_dem_2020)) +
geom_point() +
geom_smooth(method="lm", se=F, col="black") +
scale_color_gradient2(low = "red", mid="grey", high = "blue",  midpoint = 0.5)
linear.3 <- lm(deathrate/caserate ~ X60older/population + icu_beds/population)
summ(linear.3)
library(jtools)
linear.3 <- lm(deathrate/caserate ~ X60older/population + icu_beds/population,
data=county_data)
summ(linear.3)
linear.3 <- lm(deathrate/caserate ~ X60older/population + icus/population,
data=county_data)
summ(linear.3)
county_data$elderly = county_data$X60older/county_data$population
county_data$icu_rate = county_data$icus/county_data$population
linear.3 <- lm(deathrate/caserate ~ elderly + icu_rate,
data=county_data)
summ(linear.3)
linear.3 <- lm(deathrate/caserate ~ per_dem_2020 + elderly + icu_rate,
data=county_data)
summ(linear.3)
linear.3 <- lm(deathrate/caserate ~ distance_to_work + elderly + icu_rate,
data=county_data)
summ(linear.3)
linear.3 <- lm(deathrate/caserate ~ density + elderly + icu_rate,
data=county_data)
summ(linear.3)
linear.3 <- lm(deathrate/caserate ~ bacherlors +  density + elderly + icu_rate,
data=county_data)
summ(linear.3)
linear.3 <- lm(deathrate/caserate ~ black + bacherlors +  density + elderly + icu_rate,
data=county_data)
summ(linear.3)
linear.3 <- lm(deathrate/caserate ~ black + bachelors +  density + elderly + icu_rate,
data=county_data)
summ(linear.3)
y=icu_rate) +
geom_smooth(method="lm", se=F, col="black")
ggplot(county_data,
aes(x=deathrate/caserate,
y=icu_rate)) +
geom_point() +
geom_smooth(method="lm", se=F, col="black")
