nrow=1,
common.legend = TRUE, legend="bottom")
# mobility vs cases
mobility_plot <- ggplot(data = subset(county_data, mobility < 200),
aes(x = mobility,
y = dec_cases,
color = county_margin)) +
geom_point() +
ggtitle("December Cases vs. Mobility")+
xlab("Mobility") +
ylab("Cases per 100K") +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# mask use
maskuse_plot <- ggplot(data = subset(county_data),
aes(x = maskuse,
y = dec_cases,
color = county_margin)) +
geom_point() +
ggtitle("December Cases vs. Mobility")+
xlab("Mask Use") +
ylab("Cases per 100K") +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# combine
ggarrange(mobility_plot,
maskuse_plot,
nrow=1,
common.legend = TRUE, legend="bottom")
# mobility vs cases
mobility_plot <- ggplot(data = subset(county_data, mobility < 200),
aes(x = mobility,
y = dec_cases)) +
geom_point() +
ggtitle("December Cases vs. Mobility")+
xlab("Mobility") +
ylab("Cases per 100K") +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# mask use
maskuse_plot <- ggplot(data = subset(county_data),
aes(x = maskuse,
y = dec_cases)) +
geom_point() +
ggtitle("December Cases vs. Mobility")+
xlab("Mask Use") +
ylab("Cases per 100K") +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# combine
ggarrange(mobility_plot,
maskuse_plot,
nrow=1)
# mobility vs cases
mobility_plot <- ggplot(data = subset(county_data, mobility < 200),
aes(x = mobility,
y = dec_cases,
color = county_margin)) +
geom_point() +
ggtitle("December Cases vs. Mobility")+
xlab("Mobility") +
ylab("Cases per 100K") +
scale_color_gradient2(name="Biden Margin",low = "red", mid="grey", high = "blue",  midpoint = 0) +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# mask use
maskuse_plot <- ggplot(data = subset(county_data),
aes(x = maskuse,
y = dec_cases,
color = county_margin)) +
geom_point() +
ggtitle("December Cases vs. Mobility")+
xlab("Mask Use") +
ylab("Cases per 100K") +
scale_color_gradient2(name="Biden Margin",low = "red", mid="grey", high = "blue",  midpoint = 0) +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# combine
ggarrange(mobility_plot,
maskuse_plot,
nrow=1,
common.legend = TRUE, legend="bottom")
# mobility vs cases
mobility_plot <- ggplot(data = subset(county_data, mobility < 200),
aes(x = mobility,
y = dec_cases,
color = county_margin)) +
geom_point() +
ggtitle("December Cases vs. Mobility")+
xlab("Mobility (kilometers)") +
ylab("Cases per 100K") +
scale_color_gradient2(name="Biden Margin",low = "red", mid="grey", high = "blue",  midpoint = 0) +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# mask use
maskuse_plot <- ggplot(data = subset(county_data),
aes(x = maskuse,
y = dec_cases,
color = county_margin)) +
geom_point() +
ggtitle("December Cases vs. Mask Use")+
xlab("Mask Use (proportion)") +
ylab("Cases per 100K") +
scale_color_gradient2(name="Biden Margin",low = "red", mid="grey", high = "blue",  midpoint = 0) +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# combine
ggarrange(mobility_plot,
maskuse_plot,
nrow=1,
common.legend = TRUE, legend="bottom")
# mobility vs cases
mobility_plot <- ggplot(data = subset(county_data, mobility < 200),
aes(x = mobility,
y = dec_cases,
color = county_margin)) +
geom_point() +
ggtitle("Dec. Cases and Mobility")+
xlab("Mobility (kilometers)") +
ylab("Cases per 100K") +
scale_color_gradient2(name="Biden Margin",low = "red", mid="grey", high = "blue",  midpoint = 0) +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# mask use
maskuse_plot <- ggplot(data = subset(county_data),
aes(x = maskuse,
y = dec_cases,
color = county_margin)) +
geom_point() +
ggtitle("Dec. Cases and Masking")+
xlab("Mask Use (proportion)") +
ylab("Cases per 100K") +
scale_color_gradient2(name="Biden Margin",low = "red", mid="grey", high = "blue",  midpoint = 0) +
theme(legend.position = "none")+
geom_smooth(method="lm", se=F, col="black")
# combine
ggarrange(mobility_plot,
maskuse_plot,
nrow=1,
common.legend = TRUE, legend="bottom")
# measures
cor(county_data$mobility, county_data$dec_cases)
cor(county_data$maskuse, county_data$dec_cases)
# measures
cor(county_data$mobility, county_data$dec_deaths)
# measures
cor(county_data$mobility, county_data$dec_cases)
cor(county_data$maskuse, county_data$dec_cases)
cor(county_data$mobility, county_data$county_margin)
cor(county_data$dec_cases, county_data$state_margin * county_data$county_margin)
cor(county_data$dec_deaths, county_data$state_margin * county_data$county_margin)
library("stargazer")
linear.1 <- lm(county_margin + testing + density +
median_household + black + white +
asian + hispanic + lattitude,
data = county_data)
county_data$county_margin
linear.1 <- lm(dec_cases ~ county_margin + testing + density +
median_household + black + white +
asian + hispanic + lattitude,
data = county_data)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude,
data = county_data)
stargazer(linear.1)
linear.2 <- lm(dem_caserate ~ per_dem_2020 + distance_to_work,
data=county_data)
linear.2 <- lm(dec_cases ~ per_dem_2020 + distance_to_work,
data=county_data)
summ(linear.2)
linear.2 <- lm(X12.31.2020_cases ~ per_dem_2020 + distance_to_work,
data=county_data)
summ(linear.2)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude,
data = county_data)
summ(linear.1)
cor(dec_cases, county_margin)
cor(county_data$dec_cases, county_data$county_margin)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude,
data = county_data)
summ(linear.1)
cor(county_data$density, county_data$dec_cases)
cor(county_data$lattitude, county_data$dec_cases)
cor(county_data$tests, county_data$dec_cases)
county_data$tests
linear.1 <- lm(dec_cases ~ state_margin + county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work,
data = county_data)
summ(linear.1)
linear.2 <- lm(dec_cases ~ county_margin + state_margin + county_margin * state_margin,
data=county_data)
summ(linear.2)
linear.2 <- lm(dec_cases ~ county_margin*100 + state_margin + county_margin * state_margin,
data=county_data)
summ(linear.2)
linear.1 <- lm(dec_cases ~ county_margin*100 + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work,
data = county_data)
summ(linear.1)
county_data$county_margin = county_data$county_margin*100
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_deaths ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_deaths ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
cases
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
linear.1 <- lm(X12.31.2020_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
# features
county_data$elderly = county_data$X60older/county_data$population
county_data$icu_rate = county_data$icus/county_data$population
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
linear.3 <- lm(dec_cases ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.3)
linear.3 <- lm(dec_deaths ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.3)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + X65older + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + X60older + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
linear.1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(linear.1)
linear.2 <- lm(dec_cases ~ county_margin + state_margin + county_margin * state_margin,
data=county_data)
summ(linear.2)
lm_cases_3 <- lm(dec_cases ~ county_margin + maskuse + mobility,
data=county_data)
summ(lm_cases_3)
lm_cases_3 <- lm(dec_cases ~ county_margin + mobility,
data=county_data)
summ(lm_cases_3)
+ maskuse
lm_cases_3 <- lm(dec_cases ~ county_margin + maskuse + mobility,
data=county_data)
summ(lm_cases_3)
lm_deaths_1 <- lm(dec_deaths ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(lm_deaths_1)
lm_deaths_2 <- lm(dec_deaths ~ county_margin + state_margin + county_margin * state_margin,
data=county_data)
summ(lm_deaths_2)
summ(lm_deaths_2)
summ(lm_deaths_2)
lm_deaths_3 <- lm(dec_deaths ~ county_margin + maskuse + mobility,
data=county_data)
summ(linear.3)
summ(lm_deaths_3)
lm_deaths_3 <- lm(dec_deaths ~ county_margin + maskuse + mobility + icus,
data=county_data)
summ(lm_deaths_3)
lm_deaths_3 <- lm(dec_deaths ~ county_margin + maskuse + mobility + icu_rate,
data=county_data)
summ(lm_deaths_3)
stargazer(lm_cases_1, lm_cases_2)
# cases linear models
lm_cases_1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(lm_cases_1)
lm_cases_2 <- lm(dec_cases ~ county_margin + state_margin + county_margin * state_margin,
data=county_data)
summ(lm_cases_2)
stargazer(lm_cases_1, lm_cases_2)
stargazer(lm_cases_1, lm_cases_2, lm_cases_3)
stargazer(lm_cases_1, lm_cases_2, lm_cases_3, lm_deaths_1, lm_deaths_2, lm_deaths_3)
install.packages("memisc")
library("memisc")
# read county-level data
county_data <- read.csv("agglomerated/county_dataset.csv")
# get monthly case/death rates
county_data$apr_cases = (county_data$X4.30.2020_cases-county_data$X3.31.2020_cases)/county_data$population*100000
county_data$apr_deaths = (county_data$X4.30.2020_deaths-county_data$X4.30.2020_deaths)/county_data$population*100000
county_data$jun_cases = (county_data$X6.30.2020_cases-county_data$X5.31.2020_cases)/county_data$population*100000
county_data$jun_deaths = (county_data$X6.30.2020_deaths-county_data$X5.31.2020_deaths)/county_data$population*100000
county_data$oct_cases = (county_data$X10.31.2020_cases-county_data$X9.30.2020_cases)/county_data$population*100000
county_data$oct_deaths = (county_data$X10.31.2020_deaths-county_data$X9.30.2020_deaths)/county_data$population*100000
county_data$dec_cases = (county_data$X12.31.2020_cases-county_data$X11.30.2020_cases)/county_data$population*100000
county_data$dec_deaths = (county_data$X12.31.2020_deaths-county_data$X11.30.2020_deaths)/county_data$population*100000
county_data$county_margin = county_data$per_dem_2020 - county_data$per_gop_2020
# features
county_data$elderly = county_data$X60older/county_data$population
county_data$icu_rate = county_data$icus/county_data$population
# cases linear models
lm_cases_1 <- lm(dec_cases ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(lm_cases_1)
lm_cases_2 <- lm(dec_cases ~ county_margin + state_margin + county_margin * state_margin,
data=county_data)
summ(lm_cases_2)
lm_cases_3 <- lm(dec_cases ~ county_margin + maskuse + mobility,
data=county_data)
summ(lm_cases_3)
# deaths linear models
lm_deaths_1 <- lm(dec_deaths ~ county_margin + tests + density +
median_household + elderly + black + white +
asian + hispanic + lattitude + distance_to_work + household_size,
data = county_data)
summ(lm_deaths_1)
lm_deaths_2 <- lm(dec_deaths ~ county_margin + state_margin + county_margin * state_margin,
data=county_data)
summ(lm_deaths_2)
lm_deaths_3 <- lm(dec_deaths ~ county_margin + maskuse + mobility + icu_rate,
data=county_data)
summ(lm_deaths_3)
mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
summary.stats = c('R-squared','F','p','N'))
mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
'Model 4' = lm_deaths_1,
'Model 5' = lm_deaths_2,
'Model 6' = lm_deaths_3,
summary.stats = c('R-squared','F','p','N'))
pander(mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
'Model 4' = lm_deaths_1,
'Model 5' = lm_deaths_2,
'Model 6' = lm_deaths_3,
summary.stats = c('R-squared','F','p','N')))
install.packages('pander')
install.packages("pander")
library("pander")
pander(mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
'Model 4' = lm_deaths_1,
'Model 5' = lm_deaths_2,
'Model 6' = lm_deaths_3,
summary.stats = c('R-squared','F','p','N')))
mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
'Model 4' = lm_deaths_1,
'Model 5' = lm_deaths_2,
'Model 6' = lm_deaths_3,
summary.stats = c('R-squared','F','p','N'))
mt <- mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
'Model 4' = lm_deaths_1,
'Model 5' = lm_deaths_2,
'Model 6' = lm_deaths_3,
summary.stats = c('R-squared','F','p','N'))
pander(mt)
devtools::install_github('Rapporter/pander')
devtools::install_github('Rapporter/pander')
library("pander")
pander(mt)
pander.mtable(mt)
mt <- mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
'Model 4' = lm_deaths_1,
'Model 5' = lm_deaths_2,
'Model 6' = lm_deaths_3,
summary.stats = c('R-squared'))
pander.mtable(mt)
pander(mt)
mt <- mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
summary.stats = c('R-squared'))
mt <- mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
summary.stats = c('R-squared'))
pander(mt)
mt <- mtable('Model 1' = lm(maksuse ~ mobility, data=county_data),
summary.stats = c('R-squared'))
pander(mt)
mt <- mtable('Model 1' = lm(maskuse ~ mobility, data=county_data),
summary.stats = c('R-squared'))
pander(mt)
mt <- mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
'Model 4' = lm_deaths_1,
'Model 5' = lm_deaths_2,
'Model 6' = lm_deaths_3,
summary.stats = c('R-squared','F','p','N'))
mt
write.html(mt, "mt.html")
write_html(mt, "mt.html")
write_html(mt, "mt.html")
write_html(mt, "mt.html")
county_data$income = county_data$median_household
county_data$income = county_data$median_household
county_data$work_distance = county_data$distance_to_work
# cases linear models
lm_cases_1 <- lm(dec_cases ~ county_margin + tests + density +
income + elderly + black + white +
asian + hispanic + lattitude + work_distance + household_size,
data = county_data)
summ(lm_cases_1)
lm_cases_2 <- lm(dec_cases ~ county_margin + state_margin + county_margin * state_margin,
data=county_data)
summ(lm_cases_2)
lm_cases_3 <- lm(dec_cases ~ county_margin + maskuse + mobility,
data=county_data)
summ(lm_cases_3)
# deaths linear models
lm_deaths_1 <- lm(dec_deaths ~ county_margin + tests + density +
income + elderly + black + white +
asian + hispanic + lattitude + work_distance + household_size,
data = county_data)
summ(lm_deaths_1)
lm_deaths_2 <- lm(dec_deaths ~ county_margin + state_margin + county_margin * state_margin,
data=county_data)
summ(lm_deaths_2)
lm_deaths_3 <- lm(dec_deaths ~ county_margin + maskuse + mobility + icu_rate,
data=county_data)
summ(lm_deaths_3)
mt <- mtable('Model 1' = lm_cases_1,
'Model 2' = lm_cases_2,
'Model 3' = lm_cases_3,
'Model 4' = lm_deaths_1,
'Model 5' = lm_deaths_2,
'Model 6' = lm_deaths_3,
summary.stats = c('R-squared','F','p','N'))
write_html(mt, "mt.html")
lm_cases_1 <- lm(dec_cases ~ county_margin + tests + density +
income + elderly + black + white +
asian + hispanic + lattitude + work_distance + household_size,
data = county_data)
summ(lm_cases_1)
lm_cases_2 <- lm(dec_cases ~ tests + density +
income + elderly + black + white +
asian + hispanic + lattitude + work_distance + household_size,
data = county_data)
summ(lm_cases_2)
